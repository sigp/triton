---
# Common configuration tasks for all MicroK8s nodes

- name: Generate join command on primary node
  command: microk8s add-node --format yaml
  register: join_command_raw
  delegate_to: "{{ microk8s_primary }}"
  run_once: true
  when: inventory_hostname in groups['k8s_master']
  changed_when: false
  ignore_errors: true

- name: Debug raw join command output
  debug:
    var: join_command_raw
  when: inventory_hostname in groups['k8s_master']

- name: Parse join command output
  set_fact:
    join_command: "{{ join_command_raw.stdout | from_yaml }}"
  when:
    - inventory_hostname in groups['k8s_master']
    - join_command_raw.stdout is defined

- name: Verify join command was created
  assert:
    that:
      - join_command is defined
    fail_msg: "Failed to generate join command. Raw output: {{ join_command_raw }}"
    success_msg: "Join command successfully generated"

- name: Debug full join command structure
  debug:
    var: join_command
    verbosity: 1

- name: Debug raw join command output
  debug:
    var: join_command_raw.stdout
    verbosity: 1
  changed_when: false

- name: Enable MicroK8s features
  command: "microk8s enable {{ item }}"
  become: true
  loop: "{{ microk8s_features }}"
  register: enable_features
  when: inventory_hostname in groups['k8s_master']
  changed_when: "'is already enabled' not in enable_features.stdout"

- name: Configure git safe directory (workaround for known issue)
  command: git config --global --add safe.directory /snap/microk8s/current/addons/community/.git

- name: Create bash aliases for MicroK8s
  block:
    - name: Ensure .bash_aliases exists
      file:
        path: "/home/{{ microk8s_user }}/.bash_aliases"
        state: touch
        owner: "{{ microk8s_user }}"
        group: "{{ microk8s_user }}"

    - name: Add microk8s kubectl alias
      lineinfile:
        path: "/home/{{ microk8s_user }}/.bash_aliases"
        line: "alias mk='microk8s kubectl'"
        regexp: '^alias mk='
        state: present

    - name: Add microk8s helm alias
      lineinfile:
        path: "/home/{{ microk8s_user }}/.bash_aliases"
        line: "alias mh='microk8s helm'"
        regexp: '^alias mh='
        state: present

# - name: Source the .bashrc file
#   command: "source /home/{{ microk8s_user }}/.bashrc"
#   args:
#     executable: /bin/bash
#   when: false

# TODO
# FAILED! => {"changed": false, "cmd": "source /home/ubuntu/.bashrc", "msg": "[Errno 2] No such file or directory: b'source'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
    